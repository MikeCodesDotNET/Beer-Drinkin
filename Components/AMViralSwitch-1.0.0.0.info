{"Name":"AMViralSwitch","Id":2297,"Alias":"AMViralSwitch","Description":"\n\u003ciframe src=\"https://appetize.io/embed/x0n5e6qwqej5jdj99vd8avumpc?device=iphone5s\u0026scale=75\u0026autoplay=true\u0026orientation=portrait\u0026deviceColor=black\" \n        width=\"274px\" height=\"587px\" frameborder=\"0\" scrolling=\"no\"\n        style=\"float:right;margin-left:1em;\"\u003e\u0026nbsp;\u003c/iframe\u003e\n\n**AMViralSwitch** is a `UISwitch` subclass that \u0027infects\u0027 the parent view with the `OnTintColor` \nwhen the switch is turned on.  \nInspired by [this Dribble](https://dribbble.com/shots/1749645-Contact-Sync) by \n[Ramotion](https://dribbble.com/teams/Ramotion).\n\n## Usage\n`AMViralSwitch` is a drop-in replacement of `UISwitch`:  \n1. Use `AMViralSwitch` instead of `UISwitch` as the class\n2. Set the `OnTintColor` property of the switch\n\nThe switch will automatically _infect_ its superview with the selected color.\n\n## Animation\n\n### Animation Duration\nUse `AnimationDuration` property to control the animation\u0027s speed:\n\n    switch.AnimationDuration = 1.5;\n\n\n### Animation Completion\nYou can listen for when either of the `on` and `off` animations complete:\n\n    switch.OnCompleted += delegate {\n        Console.WriteLine (\"Animation On\");\n    };\n    switch.OffCompleted += delegate {\n        Console.WriteLine (\"Animation Off\");\n    };\n\n### Animate Views\nYou can animate other views alongside the switch _infection_. Typically you\u0027ll want to change \ncolor to views or labels that are inside the same superview. \n\nTo do this, you can make use of the `SetAnimationElementsOn` and `SetAnimationElementsOff`\nmethods. You can animate `CoreAnimation` properties likes this: \n\n    switch.SetAnimationElementsOn (\n        AnimationElement.Layer (\n            someView.Layer, \n            \"backgroundColor\", \n            UIColor.Clear.CGColor, \n            UIColor.White.CGColor)\n    );\n\nTo animate the `TextColor` of an `UILabel` the syntax is slightly different:\n\n    switch.SetAnimationElementsOn (\n        AnimationElement.TextColor (someLabel, UIColor.White)\n    );\n\nFollow the same principle to animate the `tintColor` of your `UIButton`s:\n\n    switch.SetAnimationElementsOn (\n        AnimationElement.TintColor (someButton, UIColor.White)\n    );\n\nFinally, as the method accepts a `params AnimationElement[]`, you can set and array, or \nmultiple:\n\n    switch.SetAnimationElementsOn (\n        AnimationElement.TintColor (someButton, UIColor.White),\n        AnimationElement.TextColor (someLabel, UIColor.White),\n        AnimationElement.Layer (\n            someView.Layer, \n            \"backgroundColor\", \n            UIColor.Clear.CGColor, \n            UIColor.White.CGColor)\n    );\n","Version":"1.0.0.0","Summary":"Drop-in replacement of UISwitch that \u0027infects\u0027 the parent view with the OnTintColor when the switch is turned on.","QuickStart":"\n**AMViralSwitch** is a `UISwitch` subclass that \u0027infects\u0027 the parent view with the `OnTintColor` \nwhen the switch is turned on.  \nInspired by [this Dribble](https://dribbble.com/shots/1749645-Contact-Sync) by \n[Ramotion](https://dribbble.com/teams/Ramotion).\n\n## Usage\n`AMViralSwitch` is a drop-in replacement of `UISwitch`:  \n1. Use `AMViralSwitch` instead of `UISwitch` as the class\n2. Set the `OnTintColor` property of the switch\n\nThe switch will automatically _infect_ its superview with the selected color.\n\n## Animation\n\n### Animation Duration\nUse `AnimationDuration` property to control the animation\u0027s speed:\n\n    switch.AnimationDuration = 1.5;\n\n\n### Animation Completion\nYou can listen for when either of the `on` and `off` animations complete:\n\n    switch.OnCompleted += delegate {\n        Console.WriteLine (\"Animation On\");\n    };\n    switch.OffCompleted += delegate {\n        Console.WriteLine (\"Animation Off\");\n    };\n\n### Animate Views\nYou can animate other views alongside the switch _infection_. Typically you\u0027ll want to change \ncolor to views or labels that are inside the same superview. \n\nTo do this, you can make use of the `SetAnimationElementsOn` and `SetAnimationElementsOff`\nmethods. You can animate `CoreAnimation` properties likes this: \n\n    switch.SetAnimationElementsOn (\n        AnimationElement.Layer (\n            someView.Layer, \n            \"backgroundColor\", \n            UIColor.Clear.CGColor, \n            UIColor.White.CGColor)\n    );\n\nTo animate the `TextColor` of an `UILabel` the syntax is slightly different:\n\n    switch.SetAnimationElementsOn (\n        AnimationElement.TextColor (someLabel, UIColor.White)\n    );\n\nFollow the same principle to animate the `tintColor` of your `UIButton`s:\n\n    switch.SetAnimationElementsOn (\n        AnimationElement.TintColor (someButton, UIColor.White)\n    );\n\nFinally, as the method accepts a `params AnimationElement[]`, you can set and array, or \nmultiple:\n\n    switch.SetAnimationElementsOn (\n        AnimationElement.TintColor (someButton, UIColor.White),\n        AnimationElement.TextColor (someLabel, UIColor.White),\n        AnimationElement.Layer (\n            someView.Layer, \n            \"backgroundColor\", \n            UIColor.Clear.CGColor, \n            UIColor.White.CGColor)\n    );\n","Hash":"f318ab1184496381310356d71c90b8af","TargetPlatforms":["ios"],"TrialHash":null}