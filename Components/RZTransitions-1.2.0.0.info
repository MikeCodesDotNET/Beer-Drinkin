{"Name":"RZTransitions","Id":2343,"Alias":"RZTransitions","Description":"\n\u003ciframe src=\"https://appetize.io/embed/rh47p8bj2tnuh3cczpvyrqukdc?device=iphone5s\u0026scale=75\u0026autoplay=true\u0026orientation=portrait\u0026deviceColor=black\" \n        width=\"274px\" height=\"587px\" frameborder=\"0\" scrolling=\"no\"\n        style=\"float:right;margin-left:1em;\"\u003e\u0026nbsp;\u003c/iframe\u003e\n\n**RZTransitions** is a library to help make iOS custom View Controller transitions slick and simple.\n\n## Features\n\n - A comprehensive library of animation controllers\n - A comprehensive library of interaction controllers\n - Mix and match any animation controller with any interaction controller\n - A shared instance manager that helps wrap the iOS custom transition protocol \n   to expose a friendlier API\n\nYou can use any of the animation controllers or interaction controllers without \nthe `TransitionsManager` and simply use them with the iOS custom View Controller \ntransition APIs.\n\n## Usage\n\n### Presenting a View Controller\n\n    var manager = TransitionsManager.Shared;\n    this.TransitioningDelegate = manager;\n    \n    var nextController = new UIViewController ();\n    nextController.TransitioningDelegate = manager;\n    \n    this.PresentViewController (nextController, true, null);\n\n### Creating a Navigation Controller \n\n_Or, use `TransitionsNavigationController`_\n\n    var navigationController = new UINavigationController ();\n    navigationController.Delegate = TransitionsManager.Shared;\n\n## Specifying Transitions for Specific View Controllers\n\n    // Use the ZoomPushAnimationController when pushing from this view controller \n    // to a SimpleCollectionViewController or popping from a \n    // SimpleCollectionViewController to this view controller.\n    TransitionsManager.Shared.SetAnimationController (\n        new ZoomPushAnimationController (),\n        this.GetType (),\n        typeof (SimpleCollectionViewController)\n        TransitionAction.PushPop);\n\n## Hooking up Interactors\n\n    private ITransitionInteractionController presentInteractionController;\n\n    public override void ViewDidLoad ()\n    {\n        base.ViewDidLoad ();\n        \n        // Create the presentation interaction controller that allows a custom \n        // gesture to control presenting a new VC via a presentViewController\n        presentInteractionController = new VerticalSwipeInteractionController ();\n        presentInteractionController.NextViewControllerDelegate = this;\n        presentInteractionController.AttachViewController (this, TransitionAction.Present);\n    }\n\n    public override void ViewWillAppear (bool animated)\n    {\n        base.ViewWillAppear (animated);\n        \n        // Use the present interaction controller for presenting any view controller \n        // from this view controller\n        TransitionsManager.Shared.SetInteractionController\u003cSimpleViewController\u003e (\n            presentInteractionController,\n            TransitionAction.Present);\n    }\n\n## Setting a New Default Transition\n\n    TransitionsManager.Shared.DefaultPresentDismissAnimationController = new ZoomAlphaAnimationController ();\n    TransitionsManager.Shared.DefaultPushPopAnimationController = new CardSlideAnimationController ();\n","Version":"1.2.0.0","Summary":"RZTransitions is a library to help make iOS custom View Controller transitions slick and simple.","QuickStart":"\n**RZTransitions** is a library to help make iOS custom View Controller transitions slick and simple.\n\n## Features\n\n - A comprehensive library of animation controllers\n - A comprehensive library of interaction controllers\n - Mix and match any animation controller with any interaction controller\n - A shared instance manager that helps wrap the iOS custom transition protocol \n   to expose a friendlier API\n\nYou can use any of the animation controllers or interaction controllers without \nthe `TransitionsManager` and simply use them with the iOS custom View Controller \ntransition APIs.\n\n## Usage\n\n### Presenting a View Controller\n\n    var manager = TransitionsManager.Shared;\n    this.TransitioningDelegate = manager;\n    \n    var nextController = new UIViewController ();\n    nextController.TransitioningDelegate = manager;\n    \n    this.PresentViewController (nextController, true, null);\n\n### Creating a Navigation Controller \n\n_Or, use `TransitionsNavigationController`_\n\n    var navigationController = new UINavigationController ();\n    navigationController.Delegate = TransitionsManager.Shared;\n\n## Specifying Transitions for Specific View Controllers\n\n    // Use the ZoomPushAnimationController when pushing from this view controller \n    // to a SimpleCollectionViewController or popping from a \n    // SimpleCollectionViewController to this view controller.\n    TransitionsManager.Shared.SetAnimationController (\n        new ZoomPushAnimationController (),\n        this.GetType (),\n        typeof (SimpleCollectionViewController)\n        TransitionAction.PushPop);\n\n## Hooking up Interactors\n\n    private ITransitionInteractionController presentInteractionController;\n\n    public override void ViewDidLoad ()\n    {\n        base.ViewDidLoad ();\n        \n        // Create the presentation interaction controller that allows a custom \n        // gesture to control presenting a new VC via a presentViewController\n        presentInteractionController = new VerticalSwipeInteractionController ();\n        presentInteractionController.NextViewControllerDelegate = this;\n        presentInteractionController.AttachViewController (this, TransitionAction.Present);\n    }\n\n    public override void ViewWillAppear (bool animated)\n    {\n        base.ViewWillAppear (animated);\n        \n        // Use the present interaction controller for presenting any view controller \n        // from this view controller\n        TransitionsManager.Shared.SetInteractionController\u003cSimpleViewController\u003e (\n            presentInteractionController,\n            TransitionAction.Present);\n    }\n\n## Setting a New Default Transition\n\n    TransitionsManager.Shared.DefaultPresentDismissAnimationController = new ZoomAlphaAnimationController ();\n    TransitionsManager.Shared.DefaultPushPopAnimationController = new CardSlideAnimationController ();\n","Hash":"0acf07d2fe357f3f9696139b16c7e572","TargetPlatforms":["ios"],"TrialHash":null}