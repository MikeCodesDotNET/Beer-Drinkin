{"Name":"PDReview","Id":1773,"Alias":"pdreview","Description":"PDRatingView lets you display an average rating and, optionally, collect a user\u0027s rating submission on items in your Xamarin.iOS application.\r\n\r\n* Custom rating images.\r\n* Custom rating scale.\r\n* Transparent background for composing.\r\n\r\n##Examples\r\n\r\nYou can use whatever images you want and whatever scale size you need. Many people use five stars.\r\n\r\n\r\n\r\nOthers have something else entirely. Perhaps you want a 10-tomato rating.\r\n\r\n\r\n\r\nWhatever you need, you give it a rectangle to it into and it will resize things accordingly.\r\n\r\n\r\n\r\nRatings displays are kept minimal. If you need to compose your ratings view into something else, it will overlay it just fine.\r\n\r\n\r\n\r\n##Other Configurations Options\r\n\r\n###Between-item whitespace\r\n\r\nNeed some space between your rating items? Just set the `ItemPadding` in the `RatingConfig` object used to build the `PDRatingView`.\r\n\r\n    // Put a little space between the rating items.\r\n    ratingConfig.ItemPadding = 5f;\r\n\r\n###Read-only (no user rating input)\r\n\r\nIf you are showing a rating without any intention of collecting a rating from the user, you can keep the rating view from taking any user input with the default iOS setting. As a result, this will keep it from ever triggering a `RatingChosen` event.\r\n\r\n    // Only display the rating; don\u0027t allow user rating.\r\n    ratingView.UserInteractionEnabled = false;\r\n    \r\n###Different rating scale size\r\n\r\nSay you need users to rate things on a scale to ten. That can be changed in the `RatingConfig` object used to build the `PDRatingView`. The default is a 5-item scale of ratings.\r\n\r\n    // Allow rating on a scale of 1 to 10.\r\n    ratingConfig.ScaleSize = 10;\r\n    \r\n###Rounding of ratings to whole or half stars\r\n\r\nIf you want average ratings to display in half- or whole-star increments, that isn\u0027t currently built in to the `PDRatingView` system directly, but you can very easily use .NET to round appropriately before setting the view\u0027s `AverageRating` to reproduce the same result.\r\n\r\n    decimal rating = 3.58m;\r\n    decimal halfRoundedRating = Math.Round(rating * 2m, MidpointRounding.AwayFromZero) / 2m;\r\n    decimal wholeRoundedRating = Math.Round(rating, MidpointRounding.AwayFromZero);\r\n    StarRating.AverageRating = wholeRoundedRating;\r","Version":"2.0.2","Summary":"PDRatingView lets you display an average rating and, optionally, collect a user\u0027s rating submission on items in your application.","QuickStart":"PDRatingView lets you display an average rating and, optionally, receive a user\u0027s rating submission.\r\n\r\n* Custom rating images.\r\n* Custom rating scale.\r\n* Transparent background for composing.\r\n\r\n##Usage\r\n\r\nIn any `UIView` or `UIViewController`, you add a `PDRatingView` to the displayed view just like any other view.\r\n\r\n    using PatridgeDev;\r\n    ...\r\n    \r\n    PDRatingView ratingView;\r\n    public override void ViewDidLoad() {\r\n        \r\n        // Gather up the images to be used.\r\n        RatingConfig ratingConfig = new RatingConfig() {\r\n            EmptyStarImage = UIImage.FromBundle(\"empty\"),\r\n            FilledStarImage = UIImage.FromBundle(\"filled\"),\r\n            ChosenStarImage = UIImage.FromBundle(\"chosen\"),\r\n        };\r\n        \r\n        // Create the view.\r\n        decimal averageRating = 3.25m;\r\n        ratingView = new PDRatingView(new RectangleF(0f, 0f, View.Bounds.Width, 125f), ratingConfig, averageRating);\r\n        \r\n        // [Optional] Do something when the user selects a rating.\r\n        ratingView.RatingChosen += (sender, e) =\u003e {\r\n            (new UIAlertView(\"Rated!\", e.Rating.ToString() + \" stars\", null, \"Ok\")).Show();\r\n        };\r\n        \r\n        // [Required] Add the view to the \r\n        View.Add(StarRating);\r\n    }\r\n   ","Hash":"5fb9a0693468f7f2cfe2b2c5a4adbf7e","TargetPlatforms":["ios"],"TrialHash":null}