<doc>
    <assembly>
        <name>Xamarin.Auth</name>
    </assembly>
    <members>
        <member name="T:Xamarin.Auth.Account">
            <summary>An Account that represents an authenticated user of a social network.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.Account">
            <summary>Initializes a new blank <see cref="Xamarin.Auth.Account" />.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.Account(System.String)">
            <param name="username">The username for the account.</param>
            <summary>Initializes an <see cref="Xamarin.Auth.Account" /> with the given username.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.Account(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <param name="username">The username for the account.</param>
            <param name="properties">Properties for the account.</param>
            <summary>Initializes an <see cref="Xamarin.Auth.Account" /> with the given username and properties.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.Account(System.String,System.Net.CookieContainer)">
            <param name="username">The username for the account.</param>
            <param name="cookies">The cookies to be stored with the account.</param>
            <summary>Initializes an <see cref="Xamarin.Auth.Account" /> with the given username and cookies.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.Account(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Net.CookieContainer)">
            <param name="username">The username for the account.</param>
            <param name="properties">Properties for the account.</param>
            <param name="cookies">The cookies to be stored with the account.</param>
            <summary>Initializes an <see cref="Xamarin.Auth.Account" /> with the given username, properties, and cookies.</summary>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.Account.Cookies">
            <summary> Cookies that are stored with the account for web services that control access using cookies.</summary>
            <value />
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Account.Deserialize(System.String)">
            <param name="serializedString">The serialized account generated by <see cref="M:Xamarin.Auth.Account.Serialize" />. </param>
            <summary>Restores an account from its serialized string representation.</summary>
            <returns>
          An <see cref="T:Xamarin.Auth.Account" /> instance represented by <paramref name="serializedString" />.
        </returns>
            <remarks />
            <altmember cref="M:Xamarin.Auth.Account.Serialize" />
        </member>
        <member name="P:Xamarin.Auth.Account.Properties">
            <summary>A key-value store associated with this account. These get encrypted when the account is stored.</summary>
            <value />
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Account.Serialize">
            <summary>Serialize this account into a string that can be deserialized.</summary>
            <returns>A <c>string</c> representing the <see cref="T:Xamarin.Auth.Account" /> instance.</returns>
            <remarks />
            <altmember cref="M:Xamarin.Auth.Account.Deserialize" />
        </member>
        <member name="M:Xamarin.Auth.Account.ToString">
            <summary>Returns a <see cref="System.String" /> that represents the current <see cref="Xamarin.Auth.Account" />.</summary>
            <returns>A <see cref="System.String" /> that represents the current <see cref="Xamarin.Auth.Account" />.</returns>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.Account.Username">
            <summary>The username used as a key when storing this account</summary>
            <value />
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.AccountStore">
            <summary>
      A persistent storage for <see cref="Account" />s. This storage is encrypted.
      Accounts are stored using a service ID and the username of the account
      as a primary key.
    </summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.AccountStore">
            <summary />
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.AccountStore.Create">
            <summary>Create an account store.</summary>
            <returns>A new <see cref="T:Xamarin.Auth.AccountStore" /> instance.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.AccountStore.Delete(Xamarin.Auth.Account,System.String)">
            <param name="account">Account to delete.</param>
            <param name="serviceId">Service identifier.</param>
            <summary>Deletes the account for a given serviceId.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.AccountStore.FindAccountsForService(System.String)">
            <param name="serviceId">Service identifier.</param>
            <summary>Finds the accounts for a given service.</summary>
            <returns>The accounts for the service.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.AccountStore.Save(Xamarin.Auth.Account,System.String)">
            <param name="account">Account to store.</param>
            <param name="serviceId">Service identifier.</param>
            <summary> Save the specified account by combining its username and the serviceId
          to form its primary key.</summary>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.Authenticator">
            <summary>A process and user interface to authenticate a user.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:Xamarin.Auth.Authenticator">
            <summary>Initializes a new instance of the <see cref="Xamarin.Auth.Authenticator" /> class.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:Xamarin.Auth.Authenticator.AllowCancel">
            <summary>Gets or sets whether to allow user cancellation.</summary>
            <value>
                <c>true</c> by default.
        </value>
            <remarks />
        </member>
        <member name="E:Xamarin.Auth.Authenticator.Completed">
            <summary> Occurs when authentication has been successfully or unsuccessfully completed.
          Consult the <see cref="M:Xamarin.Auth.AuthenticatorCompletedEventArgs.IsAuthenticated" /> event argument to determine if
          authentication was successful.</summary>
            <remarks />
        </member>
        <member name="E:Xamarin.Auth.Authenticator.Error">
            <summary>Occurs when there an error is encountered when authenticating.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Authenticator.GetPlatformUI">
            <summary>Gets the UI for this authenticator.</summary>
            <returns>The UI that needs to be presented.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Authenticator.GetUI">
            <summary>Gets the UI for this authenticator.</summary>
            <returns>The UI that needs to be presented.</returns>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.Authenticator.HasCompleted">
            <summary>Gets whether this authenticator has completed its interaction with the user.</summary>
            <value>
                <c>true</c> if authorization has been completed, <c>false</c> otherwise.
        </value>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Authenticator.OnCancelled">
            <summary>Implementations must call this function when they have cancelled the operation.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Authenticator.OnError(System.Exception)">
            <param name="exception">The reason that this authentication has failed.</param>
            <summary>Implementations must call this function when they have failed to authenticate.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Authenticator.OnError(System.String)">
            <param name="message">The reason that this authentication has failed.</param>
            <summary>Implementations must call this function when they have failed to authenticate.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Authenticator.OnSucceeded(Xamarin.Auth.Account)">
            <param name="account"> The authenticated account.</param>
            <summary>Implementations must call this function when they have successfully authenticated.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Authenticator.OnSucceeded(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <param name="username">User name of the account.</param>
            <param name="accountProperties">Additional data, such as access tokens, that need to be stored with the account. This
          information is secured.</param>
            <summary>Implementations must call this function when they have successfully authenticated.</summary>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.Authenticator.Title">
            <summary>Gets or sets the title of any UI elements that need to be presented for this authenticator.</summary>
            <value>
                <c>"Authenticate"</c> by default.
        </value>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.AuthenticatorCompletedEventArgs">
            <summary>Authenticator completed event arguments.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.AuthenticatorCompletedEventArgs(Xamarin.Auth.Account)">
            <param name="account">The account created or <see langword="null" /> if authentication failed or was canceled.</param>
            <summary>Initializes a new instance of the <see cref="T:Xamarin.Auth.AuthenticatorCompletedEventArgs" /> class.</summary>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.AuthenticatorCompletedEventArgs.Account">
            <summary>Gets the account created that represents this authentication.</summary>
            <value>The account.</value>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.AuthenticatorCompletedEventArgs.IsAuthenticated">
            <summary>Whether the authentication succeeded and there is a valid <see cref="T:Xamarin.Auth.Account" />.</summary>
            <value>
                <see langword="true" /> if the user is authenticated; otherwise, <see langword="false" />.</value>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.AuthenticatorErrorEventArgs">
            <summary>Authenticator error event arguments.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.AuthenticatorErrorEventArgs(System.Exception)">
            <param name="exception"> The exception signaling the error. The message of this object is retrieved from this exception or
          its inner exceptions.</param>
            <summary>Initializes a new instance of the <see cref="Xamarin.Auth.AuthenticatorErrorEventArgs" /> class with an exception.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.AuthenticatorErrorEventArgs(System.String)">
            <param name="message"> A message describing the error.</param>
            <summary>Initializes a new instance of the <see cref="Xamarin.Auth.AuthenticatorErrorEventArgs" /> class
          with a message but no exception.</summary>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.AuthenticatorErrorEventArgs.Exception">
            <summary>Gets the exception that signaled the error if there was one.</summary>
            <value>The exception or <see langword="null" />.</value>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.AuthenticatorErrorEventArgs.Message">
            <summary>Gets a message describing the error.</summary>
            <value>The message.</value>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.AuthException">
            <summary>An exception generated by the Xamarin.Auth library.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.AuthException">
            <summary>Initializes a new instance of the <see cref="T:AuthException" /> class..</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.AuthException(System.String)">
            <param name="message">A <see cref="T:System.String" /> that describes the exception.</param>
            <summary>Initializes a new instance of the <see cref="T:AuthException" /> class.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.AuthException(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
            <summary>Initializes a new instance of the <see cref="T:AuthException" /> class.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.AuthException(System.String,System.Exception)">
            <param name="message">A <see cref="T:System.String" /> that describes the exception.</param>
            <param name="inner">The exception that is the cause of the current exception. </param>
            <summary>Initializes a new instance of the <see cref="T:AuthException" /> class.</summary>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.FormAuthenticator">
            <summary>An authenticator that presents a form to the user.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.FormAuthenticator(System.Uri)">
            <param name="createAccountLink">A link to a website or other resource that allows the user to create a new account.</param>
            <summary>Initializes a new instance of the <see cref="Xamarin.Auth.FormAuthenticator" /> class with the given link to create accounts.</summary>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.FormAuthenticator.CreateAccountLink">
            <summary>A link to a website or other resource that allows the user to create a new account.</summary>
            <value>The create account link.</value>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.FormAuthenticator.Fields">
            <summary>The fields that need to be filled in by the user in order to authenticate.</summary>
            <value>The fields.</value>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.FormAuthenticator.GetFieldValue(System.String)">
            <param name="key">The key of the field.</param>
            <summary>Gets the value of a field using its key.</summary>
            <returns>The field value.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.FormAuthenticator.GetPlatformUI">
            <summary>Gets the UI to present this form.</summary>
            <returns>The UI that needs to be presented.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.FormAuthenticator.SignInAsync(System.Threading.CancellationToken)">
            <param name="cancellationToken">Cancellation token used to cancel the authentication.</param>
            <summary>Method called to authenticate the user using the values in the <see cref="Fields" />.</summary>
            <returns>A task to retrieve the <see cref="Account" /> for the authenticated user.</returns>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.FormAuthenticatorField">
            <summary>Account credential form field.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.FormAuthenticatorField">
            <summary>Initializes a new instance of the <see cref="Xamarin.Auth.FormAuthenticatorField" /> class.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.FormAuthenticatorField(System.String,System.String,Xamarin.Auth.FormAuthenticatorFieldType,System.String,System.String)">
            <param name="key">A key used to identify the field.</param>
            <param name="title"> The title of the field when presented in a UI.</param>
            <param name="fieldType">The type of the field.</param>
            <param name="placeholder">Placeholder text shown when there is no input value for the field.</param>
            <param name="defaultValue"> The value of the field.</param>
            <summary>Initializes a new instance of the <see cref="Xamarin.Auth.FormAuthenticatorField" /> class.</summary>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.FormAuthenticatorField.FieldType">
            <summary>The type of this field.</summary>
            <value>The type.</value>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.FormAuthenticatorField.Key">
            <summary>A key used to identify this field.</summary>
            <value>The key.</value>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.FormAuthenticatorField.Placeholder">
            <summary>Placeholder text shown when there is no input value for this field.</summary>
            <value> The placeholder.</value>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.FormAuthenticatorField.Title">
            <summary>The title of this field when presented in a UI.</summary>
            <value>The title.</value>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.FormAuthenticatorField.Value">
            <summary>The value of this field.</summary>
            <value>The value.</value>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.FormAuthenticatorFieldType">
            <summary>The display type of a credential field.</summary>
            <remarks />
        </member>
        <member name="F:Xamarin.Auth.FormAuthenticatorFieldType.Email">
            <summary>The field is an email address.</summary>
        </member>
        <member name="F:Xamarin.Auth.FormAuthenticatorFieldType.Password">
            <summary>The field is protected from onlookers.</summary>
        </member>
        <member name="F:Xamarin.Auth.FormAuthenticatorFieldType.PlainText">
            <summary>The field is plain text.</summary>
        </member>
        <member name="T:Xamarin.Auth.GetUsernameAsyncFunc">
            <param name="accountProperties">To be added.</param>
            <summary>
      Type of method used to fetch the username of an account
      after it has been successfully authenticated.  
    </summary>
            <returns>The username.</returns>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.OAuth1">
            <summary>A collection of utility functions for signing OAuth 1.0 requests.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:Xamarin.Auth.OAuth1.CreateRequest(System.String,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String)">
            <param name="method">HTTP request method.</param>
            <param name="uri">The request resource URI.</param>
            <param name="parameters">Parameters covered by: http://tools.ietf.org/html/rfc5849#section-3.4.1.3</param>
            <param name="consumerKey">Consumer key.</param>
            <param name="consumerSecret">Consumer secret.</param>
            <param name="tokenSecret">Token secret.</param>
            <summary>Creates an OAuth 1.0 signed request.</summary>
            <returns>The request.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth1.EncodeString(System.String)">
            <param name="unencoded">The string to encode.</param>
            <summary> Encodes a string according to: http://tools.ietf.org/html/rfc5849#section-3.6</summary>
            <returns>The encoded string.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth1.GetAuthorizationHeader(System.String,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String)">
            <param name="method">HTTP request method.</param>
            <param name="uri"> The request resource URI.</param>
            <param name="parameters">Parameters covered by: http://tools.ietf.org/html/rfc5849#section-3.4.1.3</param>
            <param name="consumerKey">Consumer key.</param>
            <param name="consumerSecret">Consumer secret.</param>
            <param name="token">Token.</param>
            <param name="tokenSecret">Token secret.</param>
            <summary>Gets the authorization header for a signed request.</summary>
            <returns>The authorization header.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth1.GetBaseString(System.String,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <param name="method">HTTP request method.</param>
            <param name="uri">The request resource URI.</param>
            <param name="parameters">Parameters covered by: http://tools.ietf.org/html/rfc5849#section-3.4.1.3</param>
            <summary>Gets the signature base string according to: http://tools.ietf.org/html/rfc5849#section-3.4.1</summary>
            <returns>The signature base string.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth1.GetSignature(System.String,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <param name="method">HTTP request method.</param>
            <param name="uri">The request resource URI.</param>
            <param name="parameters">Parameters covered by: http://tools.ietf.org/html/rfc5849#section-3.4.1.3</param>
            <param name="consumerSecret"> Consumer secret.</param>
            <param name="tokenSecret">Token secret.</param>
            <summary>Gets the signature of a request according to: http://tools.ietf.org/html/rfc5849#section-3.4</summary>
            <returns>The signature.</returns>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.OAuth1Authenticator">
            <summary>OAuth 1.0 authenticator.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.OAuth1Authenticator(System.String,System.String,System.Uri,System.Uri,System.Uri,System.Uri,Xamarin.Auth.GetUsernameAsyncFunc)">
            <param name="consumerKey">
          Consumer key.
        </param>
            <param name="consumerSecret">
          Consumer secret.
        </param>
            <param name="requestTokenUrl">
          Request token URL.
        </param>
            <param name="authorizeUrl">
          Authorize URL.
        </param>
            <param name="accessTokenUrl">
          Access token URL.
        </param>
            <param name="callbackUrl">
          Callback URL.
        </param>
            <param name="getUsernameAsync">
          Method used to fetch the username of an account
          after it has been successfully authenticated.
        </param>
            <summary>
          Initializes a new instance of the <see cref="Xamarin.Auth.OAuth1Authenticator" /> class.
        </summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth1Authenticator.GetInitialUrlAsync">
            <summary>Method that returns the initial URL to be displayed in the web browser.</summary>
            <returns>A task that will return the initial URL.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth1Authenticator.OnPageLoaded(System.Uri)">
            <param name="url">The URL of the loaded page.</param>
            <summary>Event handler that watches for the callback URL to be loaded.</summary>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.OAuth1Request">
            <summary>Request that is authenticated using an account retrieved from an <see cref="OAuth1Authenticator" />.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.OAuth1Request(System.String,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Xamarin.Auth.Account,System.Boolean)">
            <param name="method">
          The HTTP method.
        </param>
            <param name="url">
          The URL.
        </param>
            <param name="parameters">
          Parameters that will pre-populate the <see cref="Parameters" /> property or <see langword="null" />.
        </param>
            <param name="account">
          The account used to authenticate this request.
        </param>
            <param name="includeMultipartsInSignature">
          If set to <see langword="true" /> include multiparts when calculating the OAuth 1.0 signature.
        </param>
            <summary>
          Initializes a new instance of the <see cref="Xamarin.Auth.OAuth1Request" /> class.
        </summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth1Request.GetAuthorizationHeader">
            <summary>Gets OAuth authorization header.</summary>
            <returns>To be added.</returns>
            <remarks>
                <para>
            Make sure that the parameters array contains mulitpart keys if we're dealing with a buggy
            OAuth implementation (such as Flickr).
          </para>
                <para>
            These normally shouldn't be included: http://tools.ietf.org/html/rfc5849#section-3.4.1.3.1
          </para>
            </remarks>
        </member>
        <member name="M:Xamarin.Auth.OAuth1Request.GetResponseAsync(System.Threading.CancellationToken)">
            <param name="cancellationToken">To be added.</param>
            <summary>Asynchronously gets the response.</summary>
            <returns>The response.</returns>
            <remarks />
            <exception cref="T:System.InvalidOperationException">
                <see cref="T:Xamarin.Auth.Request.Account" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Xamarin.Auth.OAuth2Authenticator">
            <summary>Implements OAuth 2.0 implicit granting. http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-4.2</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.OAuth2Authenticator(System.String,System.String,System.Uri,System.Uri,Xamarin.Auth.GetUsernameAsyncFunc)">
            <param name="clientId">
          Client identifier.
        </param>
            <param name="scope">
          Authorization scope.
        </param>
            <param name="authorizeUrl">
          Authorize URL.
        </param>
            <param name="redirectUrl">
          Redirect URL.
        </param>
            <param name="getUsernameAsync">
          Method used to fetch the username of an account
          after it has been successfully authenticated.
        </param>
            <summary>
          Initializes a new instance <see cref="Xamarin.Auth.OAuth2Authenticator" />
          that authenticates using authorization codes (code).
        </summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.OAuth2Authenticator(System.String,System.String,System.String,System.Uri,System.Uri,System.Uri,Xamarin.Auth.GetUsernameAsyncFunc)">
            <param name="clientId">
          Client identifier.
        </param>
            <param name="clientSecret">Client secret.</param>
            <param name="scope">
          Authorization scope.
        </param>
            <param name="authorizeUrl">
          Authorize URL.
        </param>
            <param name="redirectUrl">
          Redirect URL.
        </param>
            <param name="accessTokenUrl">URL used to request access tokens after an authorization code was received.</param>
            <param name="getUsernameAsync">
          Method used to fetch the username of an account
          after it has been successfully authenticated.
        </param>
            <summary>
          Initializes a new <see cref="Xamarin.Auth.OAuth2Authenticator" />
          that authenticates using implicit granting (token).
        </summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth2Authenticator.GetInitialUrlAsync">
            <summary>Method that returns the initial URL to be displayed in the web browser.</summary>
            <returns>A task that will return the initial URL.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth2Authenticator.OnPageEncountered(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <param name="url">URL of the page.</param>
            <param name="query">The parsed query of the URL.</param>
            <param name="fragment">The parsed fragment of the URL.</param>
            <summary>Raised when a new page has been encountered.</summary>
            <remarks>
                <para>
            This is invoked on any event that has a URL: <see cref="M:Xamarin.Auth.WebRedirectAuthenticator.OnPageLoaded" />
            and <see cref="M:Xamarin.Auth.WebRedirectAuthenticator.OnPageLoading" />. Not all platforms may support triggering
            <see cref="M:Xamarin.Auth.WebRedirectAuthenticator.OnPageLoading" />, so this is provided as a blanket method to check redirect
            URLs at the earliest possible time to avoid showing redirect pages if unnecessary.
          </para>
            </remarks>
        </member>
        <member name="M:Xamarin.Auth.OAuth2Authenticator.OnPageLoaded(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <param name="url">URL of the page.</param>
            <param name="query">The parsed query of the URL.</param>
            <param name="fragment">The parsed fragment of the URL.</param>
            <summary>Raised when a new page has been loaded.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth2Authenticator.OnRedirectPageLoaded(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <param name="url">
          URL of the page.
        </param>
            <param name="query">
          The parsed query string of the URL.
        </param>
            <param name="fragment">
          The parsed fragment of the URL.
        </param>
            <summary>
          Raised when a new page has been loaded.
        </summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth2Authenticator.OnRetrievedAccountProperties(System.Collections.Generic.IDictionary{System.String,System.String})">
            <param name="accountProperties">The retrieved account properties</param>
            <summary>Event handler that is fired when an access token has been retreived.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth2Authenticator.RequestAccessTokenAsync(System.Collections.Generic.IDictionary{System.String,System.String})">
            <param name="queryValues">The parameters to make the request with.</param>
            <summary>Asynchronously makes a request to the access token URL with the given parameters.</summary>
            <returns>The data provided in the response to the access token request.</returns>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.OAuth2Request">
            <summary> Request that is authenticated using an account retrieved from an <see cref="OAuth2Authenticator" />.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.OAuth2Request(System.String,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Xamarin.Auth.Account)">
            <param name="method">
          The HTTP method.
        </param>
            <param name="url">
          The URL.
        </param>
            <param name="parameters">
          Parameters that will pre-populate the <see cref="Parameters" /> property or <see langword="null" />.
        </param>
            <param name="account">
          The account used to authenticate this request.
        </param>
            <summary>
          Initializes a new instance of the <see cref="Xamarin.Auth.OAuth2Request" /> class.
        </summary>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.OAuth2Request.AccessTokenParameterName">
            <summary>Gets or sets the access token parameter name.</summary>
            <value>
                <c>"access_token"</c> by default.
        </value>
            <remarks>Some providers, such as FourSquare do not use the somewhat-standard <c>"access_token"</c> name for their parameter.
      </remarks>
        </member>
        <member name="M:Xamarin.Auth.OAuth2Request.GetAuthenticatedUrl(Xamarin.Auth.Account,System.Uri)">
            <param name="account">The <see cref="T:Xamarin.Auth.Account" /> that's been authenticated.</param>
            <param name="unauthenticatedUrl">The unauthenticated URL.</param>
            <summary>Transforms an unauthenticated URL to an authenticated one.</summary>
            <returns>The authenticated URL.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth2Request.GetAuthenticatedUrl(Xamarin.Auth.Account,System.Uri,System.String)">
            <param name="account">The <see cref="T:Xamarin.Auth.Account" /> that's been authenticated.</param>
            <param name="unauthenticatedUrl">The unauthenticated URL.</param>
            <param name="accessTokenParameterName">The name of the access token parameter.</param>
            <summary>Transforms an unauthenticated URL to an authenticated one.</summary>
            <returns>The authenticated URL.</returns>
            <remarks />
            <altmember cref="P:Xamarin.Auth.OAuth2Request.AccessTokenParameterName" />
        </member>
        <member name="M:Xamarin.Auth.OAuth2Request.GetAuthorizationHeader(Xamarin.Auth.Account)">
            <param name="account">The <see cref="T:Xamarin.Auth.Account" /> that's been authenticated.</param>
            <summary>Gets an authenticated HTTP Authorization header.</summary>
            <returns>The authorization header.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.OAuth2Request.GetPreparedUrl">
            <summary>Gets the OAuth2 prepared URL.</summary>
            <returns>The OAuth2 prepared URL.</returns>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.Request">
            <summary>
      An HTTP web request that provides a convenient way to make authenticated
      requests using account objects obtained from an authenticator.
    </summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.Request(System.String,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Xamarin.Auth.Account)">
            <param name="method">
          The HTTP method.
        </param>
            <param name="url">
          The URL.
        </param>
            <param name="parameters">
          Parameters that will pre-populate the <see cref="Parameters" /> property or null.
        </param>
            <param name="account">
          The account used to authenticate this request.
        </param>
            <summary>
          Initializes a new instance of the <see cref="Xamarin.Auth.Request" /> class.
        </summary>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.Request.Account">
            <summary>The account that will be used to authenticate this request.</summary>
            <value>The <see cref="T:Xamarin.Auth.Account" /> instance associated with this request.</value>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Request.AddMultipartData(System.String,System.String)">
            <param name="name">Name of the part.</param>
            <param name="data">Text value of the part.</param>
            <summary>Adds a part to the request. Doing so will make this request be sent as multipart/form-data.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Request.AddMultipartData(System.String,System.IO.Stream,System.String,System.String)">
            <param name="name">
          Name of the part.
        </param>
            <param name="data">
          Data used when transmitting this part.
        </param>
            <param name="mimeType">
          The MIME type of this part.
        </param>
            <param name="filename">
          The filename of this part if it represents a file.
        </param>
            <summary>
          Adds a part to the request. Doing so will make this request be sent as multipart/form-data.
        </summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Request.GetPreparedUrl">
            <summary>Gets the prepared URL.</summary>
            <returns>The prepared URL.</returns>
            <remarks>
          Service implementors should override this function and add any needed parameters
          from the Account to the URL before it is used to get the response.  
        </remarks>
        </member>
        <member name="M:Xamarin.Auth.Request.GetPreparedWebRequest">
            <summary>
          Returns the <see cref="T:System.Net.HttpWebRequest" /> that will be used for this <see cref="T:Xamarin.Auth.Request" />. All properties
          should be set to their correct values before accessing this object.
        </summary>
            <returns>
          The prepared HTTP web request.
        </returns>
            <remarks>
          Service implementors should modify the returned request to add whatever
          authentication data is needed before getting the response.
        </remarks>
        </member>
        <member name="M:Xamarin.Auth.Request.GetResponseAsync">
            <summary>Gets the response.</summary>
            <returns>The response.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Request.GetResponseAsync(System.Threading.CancellationToken)">
            <param name="cancellationToken">To be added.</param>
            <summary>Gets the response.</summary>
            <returns>The response.</returns>
            <remarks>
          Service implementors should override this method to modify the PreparedWebRequest
          to authenticate it.  
        </remarks>
        </member>
        <member name="P:Xamarin.Auth.Request.Method">
            <summary>The HTTP method.</summary>
            <value>A string representing the HTTP method to be used with this request.</value>
            <remarks />
        </member>
        <member name="F:Xamarin.Auth.Request.Multiparts">
            <summary>The parts of a multipart request.</summary>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.Request.Parameters">
            <summary>
          The parameters of the request. These will be added to the query string of the
          URL for GET requests, encoded as form a parameters for POSTs, and added as
          multipart values if the request uses <see cref="Multiparts" />.
        </summary>
            <value />
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.Request.Url">
            <summary>The URL of the resource to request.</summary>
            <value />
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.Request+Part">
            <summary>A single part of a multipart request.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.Request+Part">
            <summary>Constructs and intializes a new instance of the <see ref="T:Xamarin.Auth.Request+Part" /> class.</summary>
            <remarks />
        </member>
        <member name="F:Xamarin.Auth.Request+Part.Data">
            <summary>The data.</summary>
            <remarks />
        </member>
        <member name="F:Xamarin.Auth.Request+Part.Filename">
            <summary>The filename of this part if it represents a file.</summary>
            <remarks />
        </member>
        <member name="F:Xamarin.Auth.Request+Part.MimeType">
            <summary>The MIME type.</summary>
            <remarks />
        </member>
        <member name="F:Xamarin.Auth.Request+Part.Name">
            <summary>The name.</summary>
            <remarks />
        </member>
        <member name="F:Xamarin.Auth.Request+Part.TextData">
            <summary>The optional textual representation of the <see cref="F:Xamarin.Auth.Request+Part.Data" /></summary>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.Response">
            <summary> An HTTP web response.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:Xamarin.Auth.Response">
            <summary>Initializes a new blank <see cref="T:Xamarin.Auth.Response" />.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.Response(System.Net.HttpWebResponse)">
            <param name="response">The <see cref="T:System.Net.HttpWebResponse" /> that this response will wrap.</param>
            <summary>Initializes a new <see cref="T:Xamarin.Auth.Response" /> that wraps a <see cref="T:System.Net.HttpWebResponse" />.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Response.Dispose">
            <summary>Releases all resource used by the <see cref="T:Xamarin.Auth.Response" /> object.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Response.Dispose(System.Boolean)">
            <param name="disposing">Whether this function was called from the Dispose method.</param>
            <summary>Releases all resource used by the <see cref="Xamarin.Auth.Response" /> object.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Response.Finalize">
            <summary>
          Releases unmanaged resources and performs other cleanup operations before the <see cref="Xamarin.Auth.Response" />
          is reclaimed by garbage collection.
        </summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Response.GetResponseStream">
            <summary>Gets the response stream.</summary>
            <returns>The response stream.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Response.GetResponseText">
            <summary>Reads all the response data and interprets it as a string.</summary>
            <returns>The response text.</returns>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.Response.Headers">
            <summary>Gets the headers returned with this response.</summary>
            <value>A dictionary containing the headers.</value>
            <remarks />
        </member>
        <member name="P:Xamarin.Auth.Response.ResponseUri">
            <summary>Gets the response URI.</summary>
            <value>The actual Uri of the final request returned.</value>
            <remarks>
          Some requests may automatically redirecet before turning a final response. This
          property will return the final <see cref="Uri" /> that this response is actually from.
        </remarks>
        </member>
        <member name="P:Xamarin.Auth.Response.StatusCode">
            <summary>Gets the response status code.</summary>
            <value>The response status code.</value>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.Response.ToString">
            <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Xamarin.Auth.Response" />.</summary>
            <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Xamarin.Auth.Response" />.</returns>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.WebAuthenticator">
            <summary>An authenticator that displays a web page.</summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.WebAuthenticator">
            <summary />
            <remarks />
        </member>
        <member name="E:Xamarin.Auth.WebAuthenticator.BrowsingCompleted">
            <summary>	
          Occurs when the visual, user-interactive, browsing has completed but there
          is more authentication work to do.
        </summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.WebAuthenticator.ClearCookies">
            <summary>Clears any cookies available to the app.</summary>
            <remarks />
            <altmember cref="P:Xamarin.Auth.WebAuthenticator.ClearCookiesBeforeLogin" />
        </member>
        <member name="P:Xamarin.Auth.WebAuthenticator.ClearCookiesBeforeLogin">
            <summary>Gets or sets whether to automatically clear cookies before logging in.</summary>
            <value />
            <remarks>
                <para>
                    <c>true</c> by default.
          </para>
                <para>
            Disabling this is useful when they have previously logged into the page in question in your app
            and you have not stored their account information. It's <c>true</c> by default under the assumption
            that you would store any account information and the only reason for reauthenticating is for
            switching or adding an additional account.
          </para>
            </remarks>
            <altmember cref="M:Xamarin.Auth.WebAuthenticator.ClearCookies" />
        </member>
        <member name="M:Xamarin.Auth.WebAuthenticator.GetInitialUrlAsync">
            <summary>Method that returns the initial URL to be displayed in the web browser.</summary>
            <returns>A task that will return the initial URL.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.WebAuthenticator.GetPlatformUI">
            <summary>Gets the UI for this authenticator.</summary>
            <returns>The UI that needs to be presented.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.WebAuthenticator.OnBrowsingCompleted">
            <summary>Raises the browsing completed event.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.WebAuthenticator.OnPageLoaded(System.Uri)">
            <param name="url">The URL of the page.</param>
            <summary>
          Event handler called when a new page has been loaded in the web browser.
          Implementations should call <see cref="M:OnSucceeded(Xamarin.Auth.Account)" /> if this page
          signifies a successful authentication.
        </summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.WebAuthenticator.OnPageLoading(System.Uri)">
            <param name="url">The URL of the page.</param>
            <summary>Event handler called when a new page is being loaded in the web browser.</summary>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.WebRedirectAuthenticator">
            <summary>
      An authenticator that displays web pages until a given "redirect" page is encountered. It then
      returns an account with the fragment on that URL.
    </summary>
            <remarks />
        </member>
        <member name="C:Xamarin.Auth.WebRedirectAuthenticator(System.Uri,System.Uri)">
            <param name="initialUrl">
          The initial URL loaded into the web browser.
        </param>
            <param name="redirectUrl">
          The URL watched for.
        </param>
            <summary>
          Initializes a new instance of the <see cref="Xamarin.Auth.WebRedirectAuthenticator" /> class.
        </summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.WebRedirectAuthenticator.GetInitialUrlAsync">
            <summary>Method that returns the initial URL to be displayed in the web browser.</summary>
            <returns>A task that will return the initial URL.</returns>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.WebRedirectAuthenticator.OnPageEncountered(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <param name="url">URL of the page.</param>
            <param name="query">The parsed query of the URL.</param>
            <param name="fragment">The parsed fragment of the URL.</param>
            <summary>Raised when a new page has been encountered.</summary>
            <remarks>
                <para>
            This is invoked on any event that has a URL: <see cref="M:Xamarin.Auth.WebRedirectAuthenticator.OnPageLoaded" />
            and <see cref="M:Xamarin.Auth.WebRedirectAuthenticator.OnPageLoading" />. Not all platforms may support triggering
            <see cref="M:Xamarin.Auth.WebRedirectAuthenticator.OnPageLoading" />, so this is provided as a blanket method to check redirect
            URLs at the earliest possible time to avoid showing redirect pages if unnecessary.
          </para>
            </remarks>
        </member>
        <member name="M:Xamarin.Auth.WebRedirectAuthenticator.OnPageLoaded(System.Uri)">
            <param name="url">The URL of the page.</param>
            <summary>Event handler called when a page has completed loading.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.WebRedirectAuthenticator.OnPageLoaded(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
          Raised when a new page has been loaded.
        </summary>
            <param name="url">
          URL of the page.
        </param>
            <param name="query">
          The parsed query of the URL.
        </param>
            <param name="fragment">
          The parsed fragment of the URL.
        </param>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.WebRedirectAuthenticator.OnPageLoading(System.Uri)">
            <param name="url">The URL of the page.</param>
            <summary>Event handler called when a new page is being loaded in the web browser.</summary>
            <remarks />
        </member>
        <member name="M:Xamarin.Auth.WebRedirectAuthenticator.OnRedirectPageLoaded(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <param name="url">
          URL of the page.
        </param>
            <param name="query">
          The parsed query of the URL.
        </param>
            <param name="fragment">
          The parsed fragment of the URL.
        </param>
            <summary>
          Raised when the redirect page has been loaded.
        </summary>
            <remarks />
        </member>
        <member name="T:Xamarin.Auth.WebUtilities">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:Xamarin.Auth.WebUtilities.EncodeString(System.String)">
            <param name="unencoded">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:Xamarin.Auth.WebUtilities.FormEncode(System.Collections.Generic.IDictionary{System.String,System.String})">
            <param name="inputs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
    </members>
</doc>
