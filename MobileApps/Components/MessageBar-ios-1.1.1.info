{"Name":"MessageBar.iOS","Id":1360,"Alias":"MessageBar-ios","Description":"Message Bar\r\n----\r\n\r\nSystem-wide dropdown messages/notifications for your iOS apps.\r\n\r\n###Features\r\n\r\n- Three default message types\r\n- Customise the message icon and background colour\r\n- Queue as many messages/notifications as you want\r\n- Supports callback when message is dismissed\r\n\r\n###Easy and Simple\r\n\r\n```\r\n//Show message from Shared instance, with the title and description\r\nMessageBarManager.SharedInstance.ShowMessage (\"Success\", \"This is success\", MessageType.Success)\r\n\t\r\n//Provide callback to execute on dismiss\r\nMessageBarManager.SharedInstance.ShowMessage (\"Info\", \"This is information\", MessageType.Info, \r\n\t\t\t\t\t() =\u003e Console.WriteLine (\"This is callback!\"))\r\n```\r\n  \r\n---\r\nMessageBar is inspired by Objective-C library TWMessageBarManager created by Terry Worona, which can be found [here](https://github.com/terryworona/TWMessageBarManager).\r\n","Version":"1.1.1","Summary":"System-wide dropdown messages for iOS","QuickStart":"##Getting Started\r\n\r\nBy default the MessageBar is accessble through `MessageBarManager.SharedInstance` from anywhere with your app. You can queue as many message as you want to display sequentially by calling `ShowMessage` method or it\u0027s overload.\r\n\r\n\r\n###Show messages\r\n\r\nYou can show messages by calling `ShowMessage` method.\r\n\r\n```\r\n//Show message from Shared instance, with the title and description\r\nMessageBarManager.SharedInstance.ShowMessage (\"Success\", \"This is success\", MessageType.Success)\r\n```\t\r\nShow messages with callback:\r\n\r\n```\r\n//Provide callback to execute on dismiss\t\r\nMessageBarManager.SharedInstance.ShowMessage (\"Info\", \"This is information\", MessageType.Info, \r\n\t\t\t\t\t\t() =\u003e Console.WriteLine (\"This is callback!\"))\r\n```\r\n\t\t\t\t\t\t\r\n\r\n###Customisation\r\n\r\nYou can customise messages by extending `MessageBarStyleSheet` class and assigning it to \r\n`MessageBarManager.StyleSheet`\r\n\r\nYou need to override one/more following methods to provide custom icons and colours for messages\r\n\r\n```\r\n//Customise background colour for message type\r\npublic virtual UIColor BackgroundColorForMessageType (MessageType type)\r\n\t\r\n//Customise icon for message type\r\npublic virtual UIImage IconImageForMessageType (MessageType type)\r\n\t\r\n//Stroke colour for message type\r\npublic virtual UIColor StrokeColorForMessageType (MessageType type)\r\n```\r\n\t\r\n","Hash":"24fd5c2136ff975611c7a1bc3b561282","TargetPlatforms":["ios"],"TrialHash":null}